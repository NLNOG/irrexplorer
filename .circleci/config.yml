# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
workflows:
  version: 2
  test:
    jobs:
      - cpython-3.7
      - cpython-3.9

jobs:
  cpython-3.7: &test-template
    docker:
      - image: cimg/python:3.7-node
        environment:
          DATABASE_URL: 'postgresql://test@localhost/test'

      - image: cimg/postgres:15.0
        environment:
          POSTGRES_USER: test
          POSTGRES_DB: test
          POSTGRES_HOST_AUTH_METHOD: trust

    working_directory: /mnt/ramdisk

    steps:
      - checkout

      - restore_cache:
          keys:
          - v4-dependencies-{{ .Environment.CIRCLE_JOB }}-{{ checksum "poetry.lock" }}-{{ checksum "frontend/yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v4-dependencies-{{ .Environment.CIRCLE_JOB }}

      - run:
          name: install python dependencies
          command: poetry --no-ansi install

      - run:
          name: install frontend dependencies
          command: poetry run frontend-install

      - save_cache:
          paths:
            - /home/circleci/.cache/pypoetry/virtualenvs
            - /mnt/ramdisk/frontend/node_modules
          key: v4-dependencies-{{ .Environment.CIRCLE_JOB }}-{{ checksum "poetry.lock" }}-{{ checksum "frontend/yarn.lock" }}

      - run:
          name: run linter
          command: poetry run lint

      - run:
          name: build frontend
          command: poetry run frontend-build

      - run:
          name: run regular tests
          command: poetry run py.test -s -vvvv --cov=irrexplorer irrexplorer --junitxml=test-reports/junit.xml -cov-fail-under=100 --cov-report term-missing:skip-covered --asyncio-mode=auto

      - store_test_results:
          path: test-reports

      - store_artifacts:
          path: /tmp/pytest-of-circleci/

  cpython-3.9:
    <<: *test-template
    docker:
      - image: cimg/python:3.9-node
        environment:
          DATABASE_URL: 'postgresql://test@localhost/test'

      - image: cimg/postgres:15.0
        environment:
          POSTGRES_USER: test
          POSTGRES_DB: test
          POSTGRES_HOST_AUTH_METHOD: trust
